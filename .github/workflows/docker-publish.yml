name: Publish image to Docker repository

on:
  workflow_dispatch:
    inputs:
      playwright_version:
        description: 'Playwright version to add'     
        required: true
        default: ''
env:
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          
      - name: set version 
        run: |
          echo "::set-output name=IMAGE_TAG::$(/bin/bash generate_version.sh --playwright_version=${{ github.event.inputs.playwright_version }})"
        id: version
      - name: Test
        run: echo ${{ steps.version.outputs.IMAGE_TAG }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          build-args: PL_VERSION=${{ github.event.inputs.playwright_version }}
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}

      - uses: actions/checkout@v2
        with:
         token: ${{ secrets.GHUB_TOKEN }}
      - run: |
          git config --global user.email ${{ github.actor }}
          git config --global user.name "${{ github.actor }}@noreply.com"
          git fetch
          git tag -a ${{ steps.version.outputs.IMAGE_TAG }} -m ${{ steps.version.outputs.IMAGE_TAG }}
          git push origin ${{ steps.version.outputs.IMAGE_TAG }}
